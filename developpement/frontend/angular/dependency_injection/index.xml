<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Injection de dépendances :: Ma documentation</title><link>http://quentinpigne.github.io/developpement/frontend/angular/dependency_injection/index.html</link><description>En Angular, les dépendances sont principalement des services, mais elles peuvent aussi être des valeurs telles que des string ou des fonctions.
Un Injector global à l’application est créé automatiquement au bootstrap et est en charge d’instancier les dépendances lorsqu’elles sont utilisées en utilisant un provider pour le service ou la valeur.
Injection context Multiple providers Références https://angular.io/guide/dependency-injection-overview</description><generator>Hugo</generator><language>fr-FR</language><atom:link href="http://quentinpigne.github.io/developpement/frontend/angular/dependency_injection/index.xml" rel="self" type="application/rss+xml"/><item><title>Injection context</title><link>http://quentinpigne.github.io/developpement/frontend/angular/dependency_injection/injection_context/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://quentinpigne.github.io/developpement/frontend/angular/dependency_injection/injection_context/index.html</guid><description>Références https://angular.io/guide/dependency-injection-context</description></item><item><title>Multiple providers</title><link>http://quentinpigne.github.io/developpement/frontend/angular/dependency_injection/multiple_providers/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://quentinpigne.github.io/developpement/frontend/angular/dependency_injection/multiple_providers/index.html</guid><description>Le multi-providing en Angular est la capacité du framework à fournir plusieurs dépendances au sein du même token.
const SOME_TOKEN: InjectionToken = new InjectionToken('SomeToken'); var injector = Injector.create([ { provide: SOME_TOKEN, useValue: 'dependency one', multi: true }, { provide: SOME_TOKEN, useValue: 'dependency two', multi: true } ]); var dependencies = injector.get(SOME_TOKEN); // dependencies == ['dependency one', 'dependency two']</description></item></channel></rss>