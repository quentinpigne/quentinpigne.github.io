<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python :: Ma documentation</title><link>http://quentinpigne.github.io/developpement/backend/python/index.html</link><description>Bases du langage Programmation Orientée Objet Data Science</description><generator>Hugo</generator><language>fr-FR</language><atom:link href="http://quentinpigne.github.io/developpement/backend/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Bases du langage</title><link>http://quentinpigne.github.io/developpement/backend/python/basics/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://quentinpigne.github.io/developpement/backend/python/basics/index.html</guid><description>Variables Types Integer 1234 Float 3.14 String 'string' ou "string" Boolean True et False En Python, le type null est None.
Méthodes utiles pour convertir les types int() : conversion en Integer float() : conversion en Float str() : conversion en String Info La fonction type() permet de connaître le type d’une variable.
Note Afin de mieux documenter le code, il est possible d’annoter les fonctions des types de paramètres et de retour.</description></item><item><title>Programmation Orientée Objet</title><link>http://quentinpigne.github.io/developpement/backend/python/poo/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://quentinpigne.github.io/developpement/backend/python/poo/index.html</guid><description>Classes Création et instanciation d’une classe Un classe se crée à l’aide du mot clé class puis s’instancie en utilisant directement son nom.
class MaClasse: ... object = MaClasse() Variables d’instance et constructeur Contrairement à d’autres langages, en Python, les attributs n’ont pas besoin d’être déclarés en avance. Ils peuvent simplement être définis au niveau du constructeur, lui-même définit avec la méthode __init__.
class MaClasse: def __init__(self, var1, var2 = "value2") self.var1 = var1 self.var2 = var2 object = MaClasse(var1 = "value1") Méthodes d’instance Les méthodes d’instance se définissent au sein de la classe comme des méthodes classiques et suivent les même conventions.</description></item><item><title>Data Science</title><link>http://quentinpigne.github.io/developpement/backend/python/data-science/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://quentinpigne.github.io/developpement/backend/python/data-science/index.html</guid><description>Numpy Matplotlib Scipy</description></item></channel></rss>