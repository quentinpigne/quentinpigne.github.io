<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kubernetes :: Tag :: Ma documentation</title><link>http://quentinpigne.github.io/tags/kubernetes/index.html</link><description/><generator>Hugo</generator><language>fr-FR</language><atom:link href="http://quentinpigne.github.io/tags/kubernetes/index.xml" rel="self" type="application/rss+xml"/><item><title>Contextes et Namespaces</title><link>http://quentinpigne.github.io/devops/kubernetes/resources/contexts-namespaces/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://quentinpigne.github.io/devops/kubernetes/resources/contexts-namespaces/index.html</guid><description>Contextes Un contexte est une sorte de profil (qui sommes-nous ? où sommes-nous ?)
kubectl config view permet de visualiser la configuration du cluster.
Pour lister les contextes:
kubectl config get-contexts kubectl config current-contextCréation d’un contexte kubectl config set-context [name] --namespace [default_ns] --user [user_name] --cluster [cluster_name].
Le nouveau contexte est ensuite activable avec: kubectl use-context [name].</description></item><item><title>Helm</title><link>http://quentinpigne.github.io/devops/kubernetes/tools/helm/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://quentinpigne.github.io/devops/kubernetes/tools/helm/index.html</guid><description>Présentation Helm est un gestionnaire de paquet et un outil de templating pour Kubernetes.
Quickstart</description></item><item><title>Kubernetes</title><link>http://quentinpigne.github.io/devops/kubernetes/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://quentinpigne.github.io/devops/kubernetes/index.html</guid><description>Labels et Annotations Healthchecks: Liveness &amp; Readiness Resources: Limits &amp; Requests Ressources Contextes et Namespaces Outils Helm Présentation Kubernetes (souvent abrégé K8S), dont le nom vient du grec timonier ou pilote, est un orchestrateur de conteneurs.
Google utilise en interne un orchestrateur de conteneurs (Borg) depuis plusieurs années déjà (2 milliards de conteneur lancés par semaine en 2014) En 2015, Google décide de faire un extract de Borg utilisable par la communauté et il l’a reverse à la CNCF (Cloud Native Computing Foundation) qui compte des grands noms comme Amazon, Google, Oracle, Docker… Fonctionne avec des conteneurs Docker mais pas que… (Containerd, CoreOS…) Parmi toutes ses fonctionnalités, Kubernetes permet :</description></item><item><title>Labels et Annotations</title><link>http://quentinpigne.github.io/devops/kubernetes/labels-annotations/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://quentinpigne.github.io/devops/kubernetes/labels-annotations/index.html</guid><description>Ces deux notions, très similaires, permettent notamment d’ajouter des métadonnées aux ressources. Elles s’appliquent à toutes les ressources de Kubernetes.
Labels Les labels sont utilisés à l’intérieur de Kubernetes. Notamment avec l’outil selector qui permet de sélectionner uniquement les pods en fonction des labels qu’ils contiennent. (sélection poussée, regexp…)
Ajout d’un label en ligne de commande: kubectl create deployment monnginx --image nginx --labels "env=prod,group=front.
Visualisation des labels: kubectl get deployment --show-labels.</description></item><item><title>Ressources</title><link>http://quentinpigne.github.io/devops/kubernetes/resources/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://quentinpigne.github.io/devops/kubernetes/resources/index.html</guid><description>Contextes et Namespaces</description></item><item><title>Outils</title><link>http://quentinpigne.github.io/devops/kubernetes/tools/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://quentinpigne.github.io/devops/kubernetes/tools/index.html</guid><description>Helm</description></item></channel></rss>