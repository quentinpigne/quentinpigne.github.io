<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ressources :: Ma documentation</title><link>http://quentinpigne.github.io/devops/kubernetes/resources/index.html</link><description>Contextes et Namespaces Pods</description><generator>Hugo</generator><language>fr-FR</language><atom:link href="http://quentinpigne.github.io/devops/kubernetes/resources/index.xml" rel="self" type="application/rss+xml"/><item><title>Contextes et Namespaces</title><link>http://quentinpigne.github.io/devops/kubernetes/resources/contexts-namespaces/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://quentinpigne.github.io/devops/kubernetes/resources/contexts-namespaces/index.html</guid><description>Contextes Un contexte est une sorte de profil (qui sommes-nous ? où sommes-nous ?)
kubectl config view permet de visualiser la configuration du cluster.
Pour lister les contextes:
kubectl config get-contexts kubectl config current-contextCréation d’un contexte kubectl config set-context [name] --namespace [default_ns] --user [user_name] --cluster [cluster_name].
Le nouveau contexte est ensuite activable avec: kubectl use-context [name].
Namespaces Un namespace est un élément de K8s permettant de réaliser du cloisonnement comme la gestion de droits ou la possibilité de lancer plusieurs fois le même pod sur un cluster. Il permet aussi d’ordonner et de sécuriser ses déploiements.</description></item><item><title>Pods</title><link>http://quentinpigne.github.io/devops/kubernetes/resources/pods/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://quentinpigne.github.io/devops/kubernetes/resources/pods/index.html</guid><description>Les Pods sont les plus petites unités informatiques déployables qui peuvent être créées et gérées dans Kubernetes.
Un pod est un groupe d’un ou plusieurs conteneurs (comme des conteneurs Docker), ayant du stockage/réseau partagé, et une spécification sur la manière d’exécuter ces conteneurs.
Les conteneurs d’un pod partagent une adresse IP et un espace de ports, et peuvent communiquer via localhost. Ils peuvent aussi communiquer entre eux en utilisant des communications inter-process standard comme les sémaphores SystemV ou la mémoire partagée POSIX.</description></item></channel></rss>